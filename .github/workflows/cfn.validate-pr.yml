name: Validate CloudFormation on PRs

on:
  pull_request:
    paths:
      - 'cloudformation/**'

permissions:
  pull-requests: write 
  contents: read

jobs: 
    validate-cfn:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1

            - name: Validate CloudFormation templates
              run: |
                aws cloudformation validate-template --template-body file://cloudformation/s3-bucket.yml

            - name: Deploy or update our stack
              run: |
                stack_name="pr-test-stack-${{github.event.pull_request.number}}"
                stack_status=$(aws cloudformation describe-stacks --stack-name $stack_name --query "Stacks[0].StackStatus" --output text 2>/dev/null || echo "STACK_DOES_NOT_EXIST")
                
                if [ "$stack_status" = "ROLLBACK_COMPLETE" ]; then
                  echo "Stack is in ROLLBACK_COMPLETE state, deleting..."
                  aws cloudformation delete-stack --stack-name $stack_name
                  aws cloudformation wait stack-delete-complete --stack-name $stack_name
                  stack_status="STACK_DOES_NOT_EXIST"
                fi

                if [ "$stack_status" = "STACK_DOES_NOT_EXIST" ]; then
                  echo "Stack does not exist, creating..."
                  aws cloudformation create-stack --stack-name $stack_name --template-body file://cloudformation/s3-bucket.yml --parameters ParameterKey=Environment,ParameterValue=test
                else
                  echo "Stack exists, updating..."
                  aws cloudformation update-stack --stack-name $stack_name --template-body file://cloudformation/s3-bucket.yml --parameters ParameterKey=Environment,ParameterValue=test
                fi

            - name: Comment on the PR
              uses: actions/github-script@v6
              with: 
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                  const { context } = require('@actions/github');
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: `CloudFormation test stack created or updated successfully! Stack name: pr-test-stack-${{github.event.pull_request.number}}`
                  });

    cleanup-on-merge:
        runs-on: ubuntu-latest
        if: github.event.pull_request.merged == true 
        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1

            - name: Delete test stack
              run: |
                stack_name="pr-test-stack-${{github.event.pull_request.number}}"
                aws cloudformation delete-stack --stack-name $stack_name